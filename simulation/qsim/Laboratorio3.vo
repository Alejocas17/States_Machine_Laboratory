// Copyright (C) 1991-2013 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus II 64-Bit"
// VERSION "Version 13.0.0 Build 156 04/24/2013 SJ Web Edition"

// DATE "03/04/2020 12:28:28"

// 
// Device: Altera EP4CE22F17C6 Package FBGA256
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module Esquema_FF (
	Z,
	CLR,
	CLK,
	W,
	X);
output 	Z;
input 	CLR;
input 	CLK;
input 	W;
input 	X;

// Design Ports Information
// Z	=>  Location: PIN_P1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// X	=>  Location: PIN_P2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// W	=>  Location: PIN_R1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// CLK	=>  Location: PIN_E1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// CLR	=>  Location: PIN_M2,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \CLK~input_o ;
wire \CLK~inputclkctrl_outclk ;
wire \Z~output_o ;
wire \W~input_o ;
wire \inst23~0_combout ;
wire \inst23~1_combout ;
wire \CLR~input_o ;
wire \CLR~inputclkctrl_outclk ;
wire \inst1~q ;
wire \X~input_o ;
wire \inst3~0_combout ;
wire \inst3~1_combout ;
wire \inst2~q ;
wire \inst8~0_combout ;
wire \inst8~1_combout ;
wire \inst~q ;
wire \inst10~combout ;


// Location: IOIBUF_X0_Y16_N8
cycloneive_io_ibuf \CLK~input (
	.i(CLK),
	.ibar(gnd),
	.o(\CLK~input_o ));
// synopsys translate_off
defparam \CLK~input .bus_hold = "false";
defparam \CLK~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G2
cycloneive_clkctrl \CLK~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\CLK~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\CLK~inputclkctrl_outclk ));
// synopsys translate_off
defparam \CLK~inputclkctrl .clock_type = "global clock";
defparam \CLK~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: IOOBUF_X0_Y4_N23
cycloneive_io_obuf \Z~output (
	.i(\inst10~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Z~output_o ),
	.obar());
// synopsys translate_off
defparam \Z~output .bus_hold = "false";
defparam \Z~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y5_N22
cycloneive_io_ibuf \W~input (
	.i(W),
	.ibar(gnd),
	.o(\W~input_o ));
// synopsys translate_off
defparam \W~input .bus_hold = "false";
defparam \W~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y4_N10
cycloneive_lcell_comb \inst23~0 (
// Equation(s):
// \inst23~0_combout  = (!\inst1~q  & !\inst2~q )

	.dataa(gnd),
	.datab(gnd),
	.datac(\inst1~q ),
	.datad(\inst2~q ),
	.cin(gnd),
	.combout(\inst23~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst23~0 .lut_mask = 16'h000F;
defparam \inst23~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y4_N22
cycloneive_lcell_comb \inst23~1 (
// Equation(s):
// \inst23~1_combout  = (!\X~input_o  & ((\W~input_o  & (\inst~q  & \inst23~0_combout )) # (!\W~input_o  & ((!\inst23~0_combout )))))

	.dataa(\X~input_o ),
	.datab(\W~input_o ),
	.datac(\inst~q ),
	.datad(\inst23~0_combout ),
	.cin(gnd),
	.combout(\inst23~1_combout ),
	.cout());
// synopsys translate_off
defparam \inst23~1 .lut_mask = 16'h4011;
defparam \inst23~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X0_Y16_N15
cycloneive_io_ibuf \CLR~input (
	.i(CLR),
	.ibar(gnd),
	.o(\CLR~input_o ));
// synopsys translate_off
defparam \CLR~input .bus_hold = "false";
defparam \CLR~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G4
cycloneive_clkctrl \CLR~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\CLR~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\CLR~inputclkctrl_outclk ));
// synopsys translate_off
defparam \CLR~inputclkctrl .clock_type = "global clock";
defparam \CLR~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: FF_X1_Y4_N23
dffeas inst1(
	.clk(\CLK~inputclkctrl_outclk ),
	.d(\inst23~1_combout ),
	.asdata(vcc),
	.clrn(\CLR~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst1~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst1.is_wysiwyg = "true";
defparam inst1.power_up = "low";
// synopsys translate_on

// Location: IOIBUF_X0_Y4_N15
cycloneive_io_ibuf \X~input (
	.i(X),
	.ibar(gnd),
	.o(\X~input_o ));
// synopsys translate_off
defparam \X~input .bus_hold = "false";
defparam \X~input .simulate_z_as = "z";
// synopsys translate_on

// Location: LCCOMB_X1_Y4_N12
cycloneive_lcell_comb \inst3~0 (
// Equation(s):
// \inst3~0_combout  = (\W~input_o ) # ((\X~input_o  & \inst~q ))

	.dataa(gnd),
	.datab(\W~input_o ),
	.datac(\X~input_o ),
	.datad(\inst~q ),
	.cin(gnd),
	.combout(\inst3~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst3~0 .lut_mask = 16'hFCCC;
defparam \inst3~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y4_N28
cycloneive_lcell_comb \inst3~1 (
// Equation(s):
// \inst3~1_combout  = (\inst3~0_combout  & ((\inst2~q ) # ((\inst~q  & \inst1~q ))))

	.dataa(\inst~q ),
	.datab(\inst1~q ),
	.datac(\inst2~q ),
	.datad(\inst3~0_combout ),
	.cin(gnd),
	.combout(\inst3~1_combout ),
	.cout());
// synopsys translate_off
defparam \inst3~1 .lut_mask = 16'hF800;
defparam \inst3~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y4_N29
dffeas inst2(
	.clk(\CLK~inputclkctrl_outclk ),
	.d(\inst3~1_combout ),
	.asdata(vcc),
	.clrn(\CLR~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst2~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst2.is_wysiwyg = "true";
defparam inst2.power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y4_N24
cycloneive_lcell_comb \inst8~0 (
// Equation(s):
// \inst8~0_combout  = (\X~input_o  & (((\inst1~q  & \inst~q )) # (!\W~input_o ))) # (!\X~input_o  & (!\W~input_o  & (\inst1~q )))

	.dataa(\X~input_o ),
	.datab(\W~input_o ),
	.datac(\inst1~q ),
	.datad(\inst~q ),
	.cin(gnd),
	.combout(\inst8~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst8~0 .lut_mask = 16'hB232;
defparam \inst8~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X1_Y4_N16
cycloneive_lcell_comb \inst8~1 (
// Equation(s):
// \inst8~1_combout  = (\inst2~q ) # (\inst8~0_combout )

	.dataa(gnd),
	.datab(gnd),
	.datac(\inst2~q ),
	.datad(\inst8~0_combout ),
	.cin(gnd),
	.combout(\inst8~1_combout ),
	.cout());
// synopsys translate_off
defparam \inst8~1 .lut_mask = 16'hFFF0;
defparam \inst8~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X1_Y4_N17
dffeas inst(
	.clk(\CLK~inputclkctrl_outclk ),
	.d(\inst8~1_combout ),
	.asdata(vcc),
	.clrn(\CLR~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\inst~q ),
	.prn(vcc));
// synopsys translate_off
defparam inst.is_wysiwyg = "true";
defparam inst.power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X1_Y4_N30
cycloneive_lcell_comb inst10(
// Equation(s):
// \inst10~combout  = (\inst2~q ) # ((\inst~q  & \inst1~q ))

	.dataa(\inst~q ),
	.datab(gnd),
	.datac(\inst2~q ),
	.datad(\inst1~q ),
	.cin(gnd),
	.combout(\inst10~combout ),
	.cout());
// synopsys translate_off
defparam inst10.lut_mask = 16'hFAF0;
defparam inst10.sum_lutc_input = "datac";
// synopsys translate_on

assign Z = \Z~output_o ;

endmodule
